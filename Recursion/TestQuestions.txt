-------------------------BASIC QUESTIONS----------------------------------





WAP (Write a Program)
Q1. WAP to take input and check whether it is character, digit or special character

Q2. WAP to take input and check the Character in Uppercase or lowercase

Q3. WAP to take input and check the character is vowel or consonant.

Q4. WAP to input to take input month and print number of days in a Month

Q5 Print Employee Salary Slip 

Id 
Name 
Basic Salary
HRA (50% of the basic salary)
DA (10% of the basic salary)
TA (40% of the basic salary)
MA (30% of the basic salary)
PF (5% of the basic salary)
GS = BasicSalary + HRA + DA + TA + MA 
TAX = 10% on GS
NS = GS - PF - TAX


Q5. Print Student MarkSheet

User can Input Rollno , Name , 3 Subject Marks 

Compute total marks, Compute Percentage



Compute Grade

>=90 A Grade

<90 to >=70 B Grade

<70 to >=60 C Grade

<60 to >=50 D Grade

<50 F Grade





Print in MarkSheet Style.










-------------------------------******** Recursion[31-Q]******-------------------------------------------------------


Q1-:
Print:
5
3
1
2
4
Hint : Odd Even

Status - DONE
---------------------------------------------------------------------------------------------------------------------

Q2-:
Prime Number Using Recursion

Status - DONE
---------------------------------------------------------------------------------------------------------------------
Q3-:
Sum of Digit
i/p : 12345
o/p : 15

Status - DONE
--------------------------------------------------------------------------------------------------------------------
Q4-:
Check if Number is Palindrome Number Using Recursion
i/p : 12345
o/p : false

Status - DONE
--------------------------------------------------------------------------------------------------------------------
Q5-:
Count Zero in a Digit Using Recursion
i/p : 10340101
o/p : 3

Status - DONE
---------------------------------------------------------------------------------------------------------------------
Q6-:
Power Calculate Using Recursion
i/p : 3, 6
o/p : whatever 3 raise to the power 6 is
 
 Status - DONE
--------------------------------------------------------------------------------------------------------------------
Q7-:
Pattern Programs Using Recursion

*****
*****
*****
*****
*****


-----------------------------------------------------------------------------------------------------
Q8-:

*
**
***
****
*****


----------------------------------------------------------------------------------------------------

Q9-:

*****
****
***
**
*


----------------------------------------------------------------------------------------------------
Q10-:

1
2 3
4 5 6
7 8 9 10



-------------------------------------------------------------------------------------------------
Q11-:

    *
   * *
  * * *
 * * * *
* * * * *


---------------------------------------------------------------------------------------------------
Q12-:

***********
 *********
  *******
   *****
    ***
     *


---------------------------------------------------------------------------------------------------
Q13-:

abcde
abcd
abc
ab
a


---------------------------------------------------------------------------------------------------
Q14-:

Frequency Count
i/p : text = "ram sharma"
o/p : {'r':2, 'a':3, 'm':2, 's':1, 'h':1,}


Status - DONE

---------------------------------------------------------------------------------------------------
Q15-:


Replace all Pi values with 3.14
i/p : str = "2*pi+3*pi=5*pi"
o/p : str = "2*3.14+3*3.14=5*3.14"


Status - DONE

-----------------------------------------------------------------------------------------------------
Q16-:

Adjacent Stars
i/p : str = "abbabaab"
o/p : "ab*baba*ab"

Status - DONE

----------------------------------------------------------------------------------------------------
Q17-:

Check if a number is power of 2
i/p : 16
o/p : true
2,4,8,16,32,64,128,256,512,1024....

Status - DONE
------------------------------------------------------------------------------------------------------
Q18-:

Check Power of 3

Status - DONE

---------------------------------------------------------------------------------------------------
Q19-:

Check Power of 4

Status - DONE
--------------------------------------------------------------------------------------------------
Q20-:

Print all subsequences of a string
i/p : String str = "ravi";
o/p : "", "r", "a", "v", "i", "ra", "rv", "ri", "ai", "av", "vi", "rav", "rai", "rvi", "avi", "ravi"

Status - DONE
---------------------------------------------------------------------------------------------------
Q21-:


Print all String Permutations
i/p : String str = "abc"
o/p : {"abc","acb","bca","bac","cba","cab"}

Status - DONE
---------------------------------------------------------------------------------------------------
Q22-:

Check whether array is sorted or not
- i/p : arr = {3,5,7,12,46,77}
- o/p : true
Search Element in an array
Search Element in array from last index


-----------------------------------------------------------------------------------------------------

Q23-:

Types of Recursion
- Single Branch
- Multi Branch

Status - DONE
----------------------------------------------------------------------------------------------------
Q24-:

Fibonacci Series

Status - DONE
--------------------------------------------------------------------------------------------------
Q25-:

Print Examples

Status - DONE
---------------------------------------------------------------------------------------------------
Q26-:

Climb Stairs


---------------------------------------------------------------------------------------------------
Q27-:

Dice Count

 
-----------------------------------------------------------------------------------------------------
Q28-:

Maze Path

Status - DONE
---------------------------------------------------------------------------------------------------
Q29-:

Diagonal Maze Path - HW


Status - DONE
---------------------------------------------------------------------------------------------------
Q30-:

Tower of Hanoi - HW


----------------------------------------------------------------------------------------------------
Q31-:

Josephus Problem

 

*****************************-----------END-------------------***************************************










=======================Backtracking[Q-9]==============================

Q1-:

N-Queen Problem


------------------------------------------------------------------------------------------------------
Q2-:

Well Formed Parantheses (Microsoft, Adobe, Nvidia, TCS, Apple)
  Well form parantheses.
 O/P     ((()))  , ()()() , (()()), (())() , ()(()),


-----------------------------------------------------------------------------------------------------
Q3-:

Sudoku


-----------------------------------------------------------------------------------------------------
Q4-:

Word Search


-----------------------------------------------------------------------------------------------------
Q5-:

Letter Combination


------------------------------------------------------------------------------------------------------
Q6-:

Combination Sum : LC-39


-----------------------------------------------------------------------------------------------------
Q7-:

Permutations : LC-46


----------------------------------------------------------------------------------------------------
Q8-:

Rat in a Maze


----------------------------------------------------------------------------------------------------
Q9-:

Count ways for Rat in a Maze










--------------------------------------END-------------------------------------------------------------------------------------------------







--------------------------------------------{ARRAYS QUESTIONS}-----------------------------------------------
          

     CRUD Operations of Array
     CRUD - Create Read Update Delete

     
------------------------------------------------------------------------------------------------------------------

     Q1. Max element in array
        i/p : [3,6,16,2,1,12]
        o/p : 16


----------------------------------------------------------------------------------------------------------------

    Q2. Max Second element in array
        i/p : [3,6,16,2,1,12]
        o/p : 12


    --------------------------------------------------------------------------------------------------------------------

    Q3. Max Third element in array
       i/p : { 3,16,6,2,1,12}
        o/p : 6


    ------------------------------------------------------------------------------------------------------------------

    Q4. Print bar chart
        i/p : [2,3,1,5,7,4]


------------------------------------------------------------------------------------------------------------------------

    Q5. Array is sorted or not
        i/p : [2,3,1,5,7,4] 
        o/p : false


    ---------------------------------------------------------------------------------------------------------------------

     Q6. Span of an array    
        i/p : {10,19,20,9,11,90}
        o/p : 90-9 = 81


    ------------------------------------------------------------------------------------------------------------------------

     Q7. Reverse of Array
        i/p : [1,2,3,4,5]
        o/p : [5,4,3,2,1]


    ---------------------------------------------------------------------------------------------------------------------------

    Q8. pair sum --- (LC-two sum-)
        i/p : [3,9,4,2,1,10,5] , k=7
        o/p : 4,3


    --------------------------------------------------------------------------------------------------------------------------

     Q9. Remove duplicate element from sorted array --- (LC-26)
        i/p : [1,2,2,4,6,9]
        o/p : [1,2,4,6,9,_]



    -------------------------------------------------------------------------------------------------------------------------

    Q10. Sort 0 and 1
        i/p : [0,1,0,0,1,0,0,1,1,0]
        o/p : [0,0,0,0,0,0,1,1,1,1]



    ---------------------------------------------------------------------------------------------------------------------------


    Q11. Sort 0,1 and 2 / Dutch National Flag/ Sort Colors (LC : 75)
        i/p : [0,1,2,0,0,2,1,2,0]
        o/p : [0,0,0,0,1,1,2,2,2]


---------------------------------------------------------------------------------------------------------------------------------

    Q12. Leader Element
        i/p : arr[] = {16,17,4,3,5,2}
        o/p : 17,5,2


-------------------------------------------------------------------------------------------------------------------------------

    Q13. Array Addition
        i/p : a[] = {2,1,5,3} , b[] = {3,1,5,6}
        o/p : {5,3,0,9}


    ----------------------------------------------------------------------------------------------------------------------------

    Q14. Array Subtraction
        i/p : a[] = {5,1,5,3} , b[] = {3,1,5,6}
        o/p : {1,9,9,7}


--------------------------------------------------------------------------------------------------------------------------------

Q15.  Rotated Array by 1

I/P :  {1,2,3,4,5,6,7,8}
O/P: {2,3,4,5,6,7,8,1}


--------------------------------------------------------------------------------------------------------------------------------

Q16. Rotated Array by K-th

I/P :  {1,2,3,4,5,6,7,8}
O/P: {2,3,4,5,6,7,8,1}



--------------------------------------------------------------------------------------------------------------------------------

Q17.  Swap The array With Given index

I/P  :  {1,3,23,9,18}   , Target Index (2,3)
O/P : {1,3,9,23,18}



------------------------------------------------------------------------------------------------------------------------------------------

Q18. Max value In Range 

I/P : {1,3,22,4,7}     , range( 2, 4)
O/P : 22


---------------------------------------------------------------------------------------------------------------------------------------------

Q19.  Target Element

I/P : {18,12,9,14,77,50}    target(14);
O/P : Index , Value , true


-----------------------------------------------------------------------------------------------------------------------------------------------

Q20.  Target Element in Range

I/P : {18,12,9,14,77,50}    target(14); Range(1 , 4)
O/P : Index , Value , true


-------------------------------------------------------------------------------------------------------------------------------------------------------

Q21. Target in 2D-ARRAY 
I/P : 
            {1,2,3,},
            {2,3,4,5,},
            {1},
            {9,8}

O/P : Target Element , Maximum , Minimum , Printing Array


--------------------------------------------------------------------------------------------------------------------------------------

Q22. How Many Element Contain Even number of Digit 

  I/P  :  arr = { 12 , 345 , 2 , 6 , 7896}
  O/P : 2


--------------------------------------------------------------------------------------------------------------------------------

Q23. 
